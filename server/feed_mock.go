// Code generated by MockGen. DO NOT EDIT.
// Source: feed.go
//
// Generated by this command:
//
//	mockgen -destination=feed_mock.go -source=feed.go -package=server
//

// Package server is a generated GoMock package.
package server

import (
	reflect "reflect"

	model "github.com/0x2e/fusion/model"
	gomock "go.uber.org/mock/gomock"
)

// MockFeedRepo is a mock of FeedRepo interface.
type MockFeedRepo struct {
	ctrl     *gomock.Controller
	recorder *MockFeedRepoMockRecorder
}

// MockFeedRepoMockRecorder is the mock recorder for MockFeedRepo.
type MockFeedRepoMockRecorder struct {
	mock *MockFeedRepo
}

// NewMockFeedRepo creates a new mock instance.
func NewMockFeedRepo(ctrl *gomock.Controller) *MockFeedRepo {
	mock := &MockFeedRepo{ctrl: ctrl}
	mock.recorder = &MockFeedRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeedRepo) EXPECT() *MockFeedRepoMockRecorder {
	return m.recorder
}

// All mocks base method.
func (m *MockFeedRepo) All() ([]*model.Feed, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All")
	ret0, _ := ret[0].([]*model.Feed)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All.
func (mr *MockFeedRepoMockRecorder) All() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockFeedRepo)(nil).All))
}

// Create mocks base method.
func (m *MockFeedRepo) Create(feed []*model.Feed) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", feed)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockFeedRepoMockRecorder) Create(feed any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFeedRepo)(nil).Create), feed)
}

// Delete mocks base method.
func (m *MockFeedRepo) Delete(id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockFeedRepoMockRecorder) Delete(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFeedRepo)(nil).Delete), id)
}

// Get mocks base method.
func (m *MockFeedRepo) Get(id uint) (*model.Feed, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*model.Feed)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockFeedRepoMockRecorder) Get(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockFeedRepo)(nil).Get), id)
}

// Update mocks base method.
func (m *MockFeedRepo) Update(id uint, feed *model.Feed) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", id, feed)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockFeedRepoMockRecorder) Update(id, feed any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockFeedRepo)(nil).Update), id, feed)
}

// MockItemInFeedRepo is a mock of ItemInFeedRepo interface.
type MockItemInFeedRepo struct {
	ctrl     *gomock.Controller
	recorder *MockItemInFeedRepoMockRecorder
}

// MockItemInFeedRepoMockRecorder is the mock recorder for MockItemInFeedRepo.
type MockItemInFeedRepoMockRecorder struct {
	mock *MockItemInFeedRepo
}

// NewMockItemInFeedRepo creates a new mock instance.
func NewMockItemInFeedRepo(ctrl *gomock.Controller) *MockItemInFeedRepo {
	mock := &MockItemInFeedRepo{ctrl: ctrl}
	mock.recorder = &MockItemInFeedRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemInFeedRepo) EXPECT() *MockItemInFeedRepoMockRecorder {
	return m.recorder
}

// DeleteByFeed mocks base method.
func (m *MockItemInFeedRepo) DeleteByFeed(id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByFeed", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByFeed indicates an expected call of DeleteByFeed.
func (mr *MockItemInFeedRepoMockRecorder) DeleteByFeed(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByFeed", reflect.TypeOf((*MockItemInFeedRepo)(nil).DeleteByFeed), id)
}
